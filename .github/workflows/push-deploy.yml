name: Push Deploy workflow

on:
  push:
    branches:
      - main
      - develop
      - hotfix/*
      - "**" # Catch-all for other branches

jobs:
  build-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Load environment variables
        uses: ./.github/actions/loadEnvVariables

      # - name: Generate Domain Classes
      #   uses: ./.github/actions/generateDomainClasses
      #   with:
      #     domainobjects_file_path: './Source/Schemas/domain-objects.yml'

      - name: Print Location Variable
        run: |
          echo "The location is: $resourceLocation"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: |
          npm install js-yaml

      - name: Transform YAML to JSON
        run: |
          node ./Source/BuildTools/transform-yaml-to-json.js ./Source/Schemas/domain-objects.yml ./Source/IaC/domain-objects-iac-map.json

      - name: Verify JSON Output
        run: |
          cat ./Source/IaC/domain-objects-iac-map.json

      - name: Deploy Infrastructure
        run: |
          resourceGroupName="rg-${applicationName}-c-${environment}-${postfixCount}"

          echo "Deploying Resource Group..."
          az group create \
            --name $resourceGroupName \
            --location $resourceLocation \
            --tags $tags

          echo "Deploying Resources..."
          az deployment group create \
            --resource-group $resourceGroupName \
            --template-file ./Source/IaC/main.bicep \
            --parameters \
              applicationName=$applicationName \
              location=$resourceLocation \
              env=$environment \
              postfixCount=$postfixCount \
              tags="$tags" \
              uniqueDeployId=$uniqueDeployId \
              domainObjectsJson="$(cat ./Source/IaC/domain-objects-iac-map.json)"
          
          echo "Assigning Developer Permissions..."
          az deployment group create \
            --resource-group $resourceGroupName \
            --template-file ./Source/IaC/dev-permissions.bicep \
            --parameters \
              developerAccessAadGroupId=$developerAccessAadGroupId \
              applicationName=$applicationName \
              env=$environment \
              postfixCount=$postfixCount \
              uniqueDeployId=$uniqueDeployId

      # - name: Log in to Azure
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.DIH_FAIR_AZURE_CREDENTIALS_DEV }}

      # - name: Ensure Resource Group Exists and Deploy Resources
      #   run: |
      #     echo ">>> Using variable LOCATION: $resourceLocation"
      #     # Ensure the resource group exists
      #     az group create --name MARWTESTFROMGITHUB --location $resourceLocation

      #     # Deploy the resources using the Bicep file
      #     az deployment group create \
      #       --resource-group MARWTESTFROMGITHUB \
      #       --template-file ./source/IaC/main.bicep
